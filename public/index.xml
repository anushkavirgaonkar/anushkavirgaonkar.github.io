<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anushka Virgaonkar</title>
    <link>https://anushkavirgaonkar.dev/</link>
      <atom:link href="https://anushkavirgaonkar.dev/index.xml" rel="self" type="application/rss+xml" />
    <description>Anushka Virgaonkar</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Anushka Virgaonkar © 2022</copyright><lastBuildDate>Sun, 27 Mar 2022 11:00:00 +0000</lastBuildDate>
    <image>
      <url>https://anushkavirgaonkar.dev/img/icon-192.png</url>
      <title>Anushka Virgaonkar</title>
      <link>https://anushkavirgaonkar.dev/</link>
    </image>
    
    <item>
      <title>Centralized or Decentralized? The Contact Tracing Dilemma</title>
      <link>https://anushkavirgaonkar.dev/talk/centralized-vs-decentralized/</link>
      <pubDate>Sun, 27 Mar 2022 11:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/talk/centralized-vs-decentralized/</guid>
      <description>&lt;p&gt;This is a summary of the &lt;a href=&#34;https://eprint.iacr.org/2020/531.pdf&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Centralized or Decentralized? The Contact Tracing Dilemma&amp;rdquo;&lt;/a&gt; research paper having the following abstract - &amp;ldquo;The COVID-19 pandemic created a noticeable challenge to the cryptographic community with the development of contact tracing applications. The media reported a dispute between designers proposing a centralized or a decentralized solution (namely, the PEPP-PT and the DP3T projects).
Perhaps, the time constraints to develop and deploy efficient solutions led to non-optimal (in terms
of privacy) solutions. Moreover, arguments have been severely biased and the scientific debate did
not really happen until recently. In this paper, we show the vulnerabilities and the advantages of
both solutions systematically. We believe that none offers any sufficient level of privacy protection
and the decision to use one or another is as hard as using automated contact tracing at the first
place. A third way could be explored. We list here a few possible directions.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Get a copy of the talk slides &lt;a href=&#34;https://github.com/chaitanyarahalkar/temporary-uploads/raw/master/CS-8803-SCP.pdf&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Million Dollar Dissident</title>
      <link>https://anushkavirgaonkar.dev/talk/million-dollar-dissident/</link>
      <pubDate>Fri, 29 Oct 2021 11:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/talk/million-dollar-dissident/</guid>
      <description>&lt;p&gt;A talk about the Zero-Day exploit used by the NSO group on Ahmed Mansoor, its backstory, exploit and network
infrastructure.  Get a copy of the slides &lt;a href=&#34;https://git.io/ems8803&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summarizing and Analyzing the Privacy-Preserving Techniques in Bitcoin and other Cryptocurrencies</title>
      <link>https://anushkavirgaonkar.dev/publication/sum-crypt/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/publication/sum-crypt/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Summarizing and Analyzing the Privacy-Preserving Techniques in Bitcoin and other Cryptocurrencies</title>
      <link>https://anushkavirgaonkar.dev/talk/privacy-blockchain/</link>
      <pubDate>Sun, 25 Apr 2021 11:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/talk/privacy-blockchain/</guid>
      <description>&lt;p&gt;Bitcoin and many other similar Cryptocurrencies have been in existence for over a decade, prominently focusing on decentralized, pseudo-anonymous ledger-based transactions. Many protocol improvements and changes have resulted in new variants of Cryptocurrencies that are known for their peculiar characteristics. For instance, Storjcoin is a Proof-of-Storage-based Cryptocurrency that incentivizes its peers based on the amount of storage owned by them. Cryptocurrencies like Monero strive for user privacy by using privacy-centric cryptographic algorithms.  While Cryptocurrencies strive to maintain peer transparency by making the transactions and the entire ledger public, user privacy is compromised at times. Monero and many other privacy-centric Cryptocurrencies have significantly improved from the original Bitcoin protocol after several problems were found in the protocol. Most of these deficiencies were related to the privacy of users. Even though Bitcoin claims to have pseudo-anonymous user identities, many attacks have managed to successfully de-anonymize users. In this paper, we present some well-known attacks and analysis techniques that have compromised the privacy of Bitcoin and many other similar Cryptocurrencies. We also analyze and study different privacy-preserving algorithms and the problems these algorithms manage to solve. Lastly, we touch upon the ethics, impact, legality, and acceptance of imposing these privacy algorithms. Get a copy of the slides &lt;a href=&#34;https://git.io/cs8803&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Designing a Secure Device-to-Device File Transfer Mechanism</title>
      <link>https://anushkavirgaonkar.dev/talk/secure-p2p-file-transfer/</link>
      <pubDate>Sat, 24 Apr 2021 11:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/talk/secure-p2p-file-transfer/</guid>
      <description>&lt;p&gt;Secure, reliable, and fast transfer of files across the Internet is a problem attempted to be solved through many application-layer protocols. In this paper, we aim to design a secure, reliable, open-design, and performant file transfer protocol that is inspired by the WebRTC protocol stack. Traditionally, transferring files involves a publicly exposed (available on the public network) third-party server that serves the uploaded files to the receiver. Here, the third-party server has to bear the storage and bandwidth cost to transfer the files between the two parties. We propose a protocol that uses a relay server to relay the files from the client to the server. A relay server has several advantages over a regular file-hosting server. Firstly, a relay server does not retain the uploaded files, it simply relays them. Secondly, a relay server has a full-duplex communication channel and therefore the receiver is not required to wait for the sender to upload the files completely. In this paper, we study available file transfer approaches and their known flaws. We propose our idea and compare our stack with WebRTC. Finally, we perform empirical analysis and, benchmark our device-to-device transfer approach along with other available options including WebRTC. Get a copy of the slides &lt;a href=&#34;https://git.io/cs6262&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>End-to-End Lung Cancer Diagnosis on Computed Tomography Scans using 3D CNN and Explainable AI</title>
      <link>https://anushkavirgaonkar.dev/publication/e2e-dl/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/publication/e2e-dl/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hidden Secrets of Python</title>
      <link>https://anushkavirgaonkar.dev/talk/python-pune-sept/</link>
      <pubDate>Sat, 28 Sep 2019 11:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/talk/python-pune-sept/</guid>
      <description>&lt;p&gt;Python has a large number of really cool modules that people don&amp;rsquo;t know about. These are quite helpful. People often tend to program the hard way since they don&amp;rsquo;t know about the existence of these modules. Such examples can be the itertools module, the secrets module to generate secure random numbers etc. Get a copy of the talk slides &lt;a href=&#34;https://bit.ly/python-meetups-sept&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cedit</title>
      <link>https://anushkavirgaonkar.dev/project/p2send/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/project/p2send/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cyberfort CTF</title>
      <link>https://anushkavirgaonkar.dev/project/cyberfort/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/project/cyberfort/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Frost Linux</title>
      <link>https://anushkavirgaonkar.dev/project/frost-linux/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/project/frost-linux/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Password Manager</title>
      <link>https://anushkavirgaonkar.dev/project/password-manager/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/project/password-manager/</guid>
      <description></description>
    </item>
    
    <item>
      <title>What is an Electronic Nose?</title>
      <link>https://anushkavirgaonkar.dev/post/what-is-an-electronic-nose/</link>
      <pubDate>Sun, 14 Jul 2019 11:00:01 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/post/what-is-an-electronic-nose/</guid>
      <description>&lt;p&gt;Alexander Graham Bell once said- “Did you ever measure a smell? Can you tell whether one smell is just twice strong as another? Can you measure the difference between two kinds of smell and another? It is very obvious that we have very many different kinds of smells, all the way from the odour of violets and roses up to asafetida. But until you can measure their likeness and differences, you can have no science of odour. If you are ambitious to find a new science, measure a smell.” An electric nose is a device which has the capability of detecting, identifying and discriminating the presence of molecules in a sample of air. It was termed by Gardner and Barlett in 1994. The improvements over the past 20 years have led to the creation of the artificial olfaction technology.&lt;/p&gt;

&lt;p&gt;Electronic noses are based on the mammalian olfactory model. The olfactory receptors that are responsible for detection of odorants in the human body are analogous to the array of electronic sensors in the electronic nose. Biomimetics is a field in which the principles of biology, chemistry and engineering are applied to develop an artificial system that is based on a natural phenomenon. Electronic nose is one example of it.&lt;/p&gt;

&lt;p&gt;The electronic nose comprises of three components- a detecting system, computing system and sample delivery system. The delivery system collects the required sample, which is then sent to the detection system. The detection system is a group of sensors, which change their electrical characteristics on coming in contact with the volatile compounds. Scientists were successful in creating a global fingerprint for every unique smell and flavor. The computing system has an Artificial Neural Network. This ANN is trained with qualified samples taken from a reference database. The instrument then recognizes new samples by comparing them with the existing fingerprints from the database. With the help of this architecture, the electronic nose simulates the mammalian olfactory system.This has however proven to be inaccurate in some cases of odors, where it may be made up of multiple different molecules. The electronic nose interprets these different molecules as different compounds, thereby posing inaccurate results.&lt;br /&gt;
Current research aims to increase the accuracy, reliability and efficiency of the electric nose. With the emergence of this out-of-the-world technology, applications are endless. Detecting contamination, spoilage or adulteration of materials is a major use case. Electronic noses have been used for quality control applications in food, beverage, cosmetic and perfumery industries. They are used to identify volatile organic compounds in air,water and soil samples for conducting agricultural analysis. Currently, they are being developed for conducting medical diagnosis, where the patient’s breath is analysed to detect the presence of certain chemicals responsible for a disease. A person’s breath contains 2,500 chemical compounds. If a person is ill, his breath, when analysed can indicate the kind of disease he has. Tuberculosis is proven to be detected in this manner. Furthermore, research is being carried out to use this technique for detecting volatile organic compounds emitted by different types of cancerous cells. NASA has developed its own e-nose model that is able to sniff out cancerous Brain cells. Thus, electronic nose facilitates in detecting cancer in a non-invasive, rapid and reliable manner.&lt;/p&gt;

&lt;p&gt;The scope of this technology has just scratched the surface. In a few years, this technology may even get embedded in smart phones. The Google Nose prank that the company played on us on April Fools’ day, might turn into reality. Who knows what technology has for us in the future; someday, people would be able to smell things just by searching them on Google!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WebTTY</title>
      <link>https://anushkavirgaonkar.dev/project/webtty/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/project/webtty/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hidden Secrets of Python</title>
      <link>https://anushkavirgaonkar.dev/slides/python_workshop_meetups/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/slides/python_workshop_meetups/</guid>
      <description>

&lt;h2 id=&#34;get-a-copy-of-this-notebook-here-https-bit-ly-python-meetups-sept&#34;&gt;Get a copy of this notebook &lt;a href=&#34;https://bit.ly/python-meetups-sept&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&#34;f-strings&#34;&gt;F-Strings&lt;/h2&gt;

&lt;p&gt;PEP 498 introduced a new string formatting mechanism known as Literal String Interpolation or more commonly as F-strings&lt;/p&gt;

&lt;p&gt;Why F-Strings?
- They are fast.
- They can evaluate expressions.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 10 
b = 20

print(f&amp;quot;{a + b}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;yield&#34;&gt;Yield&lt;/h2&gt;

&lt;p&gt;The yield statement suspends function’s execution and sends a value back to caller, but retains enough state to enable function to resume where it is left off. It is used in Python generator functions.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def foo(bar):
  yield bar
  print(f&amp;quot;Resuming execution after returning {bar}&amp;quot;)
  yield bar + 1
  print(f&amp;quot;Resuming execution after returning {bar + 1}&amp;quot;)
  yield bar + 2
  print(f&amp;quot;Resuming execution after returning {bar + 2}&amp;quot;)

values_returned = foo(10)

for value in values_returned:
  print(value)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;context-managers&#34;&gt;Context Managers&lt;/h2&gt;

&lt;p&gt;Context Managers are used to manage resources which includes file pointers, variables etc. The scope of the variables is retained within the context.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &#39;&#39;&#39; 
 with open(&amp;quot;file.txt&amp;quot;,&amp;quot;r&amp;quot;) as f:
  data = f.read()
&#39;&#39;&#39;
class ContextManager(): 
    def __init__(self): 
        print(&#39;init method called&#39;) 
          
    def __enter__(self): 
        print(&#39;enter method called&#39;) 
        return self
      
    def __exit__(self, exc_type, exc_value, exc_traceback): 
        print(&#39;exit method called&#39;) 


with ContextManager() as manager: 
    print(&#39;with statement block&#39;) 

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;else-clauses-on-loops&#34;&gt;Else Clauses on Loops&lt;/h2&gt;

&lt;p&gt;Python allows us to add else conditions to for/while loops as well.  If the for/while loop condition fails, then the else statement is executed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
def find_index(to_search,target):
  flag = False
  index = int()
  for i,value in enumerate(to_search):
    if value == target:
      flag = True
      index = i
      break

  if flag:
    return index
  else:
     return -1 


my_list = [&#39;Corey&#39;, &#39;Rick&#39;, &#39;John&#39;]
index_location = find_index(my_list, &#39;Steve&#39;)

print(&#39;Location of target is index: {}&#39;.format(index_location))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;def find_index(to_search, target):
  for i, value in enumerate(to_search):
    if value == target:
      break
  else:
    return -1
  return i


my_list = [&#39;Corey&#39;, &#39;Rick&#39;, &#39;John&#39;]
index_location = find_index(my_list, &#39;Steve&#39;)

print(&#39;Location of target is index: {}&#39;.format(index_location))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;named-tuples&#34;&gt;Named Tuples&lt;/h2&gt;

&lt;p&gt;Named tuples are easy-to-create, lightweight object types. Named tuple instances can be referenced using object-like variable dereferencing or the standard tuple syntax. They can be used similarly to struct or other common record types, except that they are immutable.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from collections import namedtuple

Color = namedtuple(&#39;Color&#39;, [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;])

color = Color(red = 55,green = 155,blue = 255)
white = Color(255,255,255)

print(color.blue)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;itertools-to-manage-looping-efficiently&#34;&gt;Itertools - To Manage Looping Efficiently&lt;/h2&gt;

&lt;p&gt;Python has an extensive suite of iterators in its itertools module, which allow for memory efficient and faster looping. It is recommended that programmers should rely on these pre-defined iterators instead of hard-coding the logic by themselves.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from itertools import count, cycle, compress, groupby, permutations, combinations


## 1. Count 
print(&amp;quot;Demonstration of count&amp;quot;)
for i in count(10,2):
  print(i)
  if i == 30:
    break

# 2. Cycle
print(&amp;quot;Demonstration of cycle&amp;quot;)
iteration = 0 
for i in cycle(&amp;quot;ABC&amp;quot;):
  print(i)
  iteration += 1
  if iteration == 5:
    break

# 3. Group By
print(&amp;quot;Demonstration of Group by&amp;quot;)
def get_state(person):
    return person[&#39;state&#39;]

people = [
    {
        &#39;name&#39;: &#39;John Doe&#39;,
        &#39;city&#39;: &#39;Gotham&#39;,
        &#39;state&#39;: &#39;NY&#39;
    },
    {
        &#39;name&#39;: &#39;Jane Doe&#39;,
        &#39;city&#39;: &#39;Kings Landing&#39;,
        &#39;state&#39;: &#39;NY&#39;
    },
    {
        &#39;name&#39;: &#39;Corey Schafer&#39;,
        &#39;city&#39;: &#39;Boulder&#39;,
        &#39;state&#39;: &#39;CO&#39;
    },
    {
        &#39;name&#39;: &#39;Al Einstein&#39;,
        &#39;city&#39;: &#39;Denver&#39;,
        &#39;state&#39;: &#39;CO&#39;
    },
    {
        &#39;name&#39;: &#39;John Henry&#39;,
        &#39;city&#39;: &#39;Hinton&#39;,
        &#39;state&#39;: &#39;WV&#39;
    },
    {
        &#39;name&#39;: &#39;Randy Moss&#39;,
        &#39;city&#39;: &#39;Rand&#39;,
        &#39;state&#39;: &#39;WV&#39;
    },
    {
        &#39;name&#39;: &#39;Nicole K&#39;,
        &#39;city&#39;: &#39;Asheville&#39;,
        &#39;state&#39;: &#39;NC&#39;
    },
    {
        &#39;name&#39;: &#39;Jim Doe&#39;,
        &#39;city&#39;: &#39;Charlotte&#39;,
        &#39;state&#39;: &#39;NC&#39;
    },
    {
        &#39;name&#39;: &#39;Jane Taylor&#39;,
        &#39;city&#39;: &#39;Faketown&#39;,
        &#39;state&#39;: &#39;NC&#39;
    }
]

person_group = groupby(people, get_state)

for group,values in person_group:
  print(group,[value[&#39;name&#39;] for value in values])

# 4. Compress
print(&amp;quot;Demonstration of compress&amp;quot;)
values = compress(&amp;quot;Meetups&amp;quot;,[1,1,1,1,0,0,0])
print(list(values))

# 5. Permutations
print(&amp;quot;Demonstration of permutations&amp;quot;)

lst = [1,2,3]
for perm in permutations(lst,2):
  print(perm)


# 6. Combinations 
print(&amp;quot;Demonstration of combinations&amp;quot;)
name = &amp;quot;ABCD&amp;quot;

for comb in combinations(name,2):
  print(comb)

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;one-liner-if-else-if-else-condition&#34;&gt;One liner if else if else condition&lt;/h2&gt;

&lt;p&gt;Python allows a cleaner and shorthand syntax for defining if-else statements.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 10
print(&#39;Even&#39;) if a % 2 == 0 else print(&#39;False&#39;)

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;swapping-variables&#34;&gt;Swapping variables&lt;/h2&gt;

&lt;p&gt;Variable swapping can be done without the need of a third temporary variable.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a,b = 1,2
print(a,b)

a,b = b,a
print(a,b)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;chained-function-call&#34;&gt;Chained function call&lt;/h2&gt;

&lt;p&gt;Python allows a cleaner and shorthand syntax for defining chained else-if statements.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
def add(x,y):
  return x + y

def sub(x,y):
  return x - y

def mul(x,y):
  return x * y

x = 1

# Lengthy approach
if x == 1:
  print(add(10,20))
elif x == 2:
  print(sub(10,20))
elif x == 3:
  print(mul(10,20))
  
# Quick approach 
print((add if x == 1 else sub if x == 2 else mul)(10,20))

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;print-an-array-with-strings-as-one-comma-separated-string&#34;&gt;Print an array with strings as one comma-separated string&lt;/h2&gt;

&lt;p&gt;The power of Python allows you to print a list to the standard I/O, with the choice of your own delimiter like a comma.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;row = [&amp;quot;1&amp;quot;, &amp;quot;bob&amp;quot;, &amp;quot;developer&amp;quot;, &amp;quot;python&amp;quot;]
print(*row, sep=&#39;,&#39;)

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;enumerate&#34;&gt;Enumerate&lt;/h2&gt;

&lt;p&gt;List enumeration can be done without the need of maintaining manual counter with the enumerate function.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cities = [&amp;quot;London&amp;quot;, &amp;quot;Paris&amp;quot;, &amp;quot;New York&amp;quot;]

# Lengthy approach
count=0
for city in cities:
  print(count,city)
  count+=1

# Recommended approach
for count,city in enumerate(cities):
  print(count,city)
  
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;0 London
1 Paris
2 New York
0 London
1 Paris
2 New York
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;zip&#34;&gt;Zip&lt;/h2&gt;

&lt;p&gt;Two or more iterables can be iterated in parallel with the zip function.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;roll_no = [101,102,103,104,105,106,107,108,109,110]
marks = [45,32,23,15,44]

# Lengthy approach
&#39;&#39;&#39;for i in range(len(roll_no)):
    r = roll_no[i]
    m = marks[i]
    #print(r,m)
   &#39;&#39;&#39; 
# Recommended approach
for r,m in zip(roll_no,marks):
    print(r,m)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;101 45
102 32
103 23
104 15
105 44
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hiding-your-source-code&#34;&gt;Hiding Your Source Code&lt;/h2&gt;

&lt;p&gt;Since Python is built on C, the Python interpreter has the benefits that a C compiler has. Python code can be translated to a runnable binary with the .pyc file. The Python interpreter converts the .py file to a runnable binary in order to prevent recompilation of the code and save time in future. If the same python script is called again, the interpreter simply exectutes the precompiled .pyc file to save time.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
chaitanya@meetups$ python3 -m py_compile foo.py

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;getpass-function&#34;&gt;GetPass Function&lt;/h2&gt;

&lt;p&gt;Ever created a Python script that accepts passwords as input? The normal input() function in Python shows on the screen what you are typing. The GetPass function allows you to get passwords as input the UNIX style.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from getpass import getpass 

username = input(&amp;quot;Enter your username: &amp;quot;)
password  = getpass(&amp;quot;Enter your password: &amp;quot;)

print(username,password,sep = &#39;\n&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;http-server&#34;&gt;HTTP Server&lt;/h2&gt;

&lt;p&gt;Want to host your files or a static website? Python has a built in minimalistic HTTP Server useful for serving static content. It is fast and easy to use.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
anushka@meetups$ python3 -m http.server 8001 

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hiding-secrets-keys-with-enviroment-variables&#34;&gt;Hiding Secrets &amp;amp; Keys with Enviroment variables&lt;/h2&gt;

&lt;p&gt;Exposing your private keys or passwords in Python scripts is not a good idea, especially if you are uploading the code on some online repository. Secrets and keys should be stored in environment variables, which then Python can access through the &lt;i&gt; os &lt;/i&gt; module.&lt;/p&gt;

&lt;p&gt;On a Linux/Mac machine -&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
chaitanya@meetups$ nano .bash_profile 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a line to the .bash_profile file -&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
export password=&amp;quot;mypassword&amp;quot; 

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;import os 


print(os.environ.get(&amp;quot;password&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;underscore-placeholders&#34;&gt;Underscore placeholders&lt;/h2&gt;

&lt;h4 id=&#34;there-are-five-underscore-variable-naming-conventions-used-in-python&#34;&gt;There are five underscore variable naming conventions used in Python&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Single Leading Underscore: _var&lt;/li&gt;
&lt;li&gt;Single Trailing Underscore: var_&lt;/li&gt;
&lt;li&gt;Double Leading Underscore: __var&lt;/li&gt;
&lt;li&gt;Double Leading and Trailing Underscore: _&lt;em&gt;var_&lt;/em&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Single Underscore: _&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_x = 10 # 1. Variable is for internal use
class_ = 14 # 2. To use keywords as variable names
for_ = &amp;quot;Meetups&amp;quot; 

# 3. Acts as a sort-of private variable (Name-mangling)

class Base(object):
def __init__(self): # Constructor 
self.__foo = 7 

class Derived(Base):
def __init__(self):
super().__init__() # Calling the base class constructor
self.__foo = 10 


s = Derived()
print(&amp;quot;Value from derived class: &amp;quot;,s._Derived__foo)
print(&amp;quot;Value from base class: &amp;quot;,s._Base__foo)

# 4. __var__ is reserved for internal Python magic methods and variables. Not recommended to be used by programmer.

# 5. Single underscore acts as useless variables by convention. It is also used as a temporary variable in Python REPL 

for _ in range(2):
# Code 
None 



&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;secrets-module&#34;&gt;Secrets Module&lt;/h2&gt;

&lt;p&gt;Python has a module to generate secure random numbers. It uses the operating system&amp;rsquo;s random number generator.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import secrets 
  
token = secrets.token_hex(16) 
  
print(token)



&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;  # Why the random module in Python is insecure 
  r1 = random.Random(31337)
  outputs = [r1.getrandbits(32) for _ in range(625)]
  
  mtr = MT19937Recover() # Mersenne Twister Breaker 
  r2 = mtr.go(outputs)
  
  print(r1.getrandbits(32) == r2.getrandbits(32))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;shallow-and-deep-copy&#34;&gt;Shallow and Deep Copy&lt;/h2&gt;

&lt;p&gt;In Python, assignment statements do not copy objects, they create bindings between a target and an object. When we use = operator user thinks that this creates a new object; well, it doesn’t. It only creates a new variable that shares the reference of the original object.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Shallow copy 
l = [1,2,3,4,5]

p = l 

l[0] = 100 

print(p[0])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;100
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# Deep copy 
import copy 

l = [1,2,3,4,5]

p = copy.deepcopy(l) # Creates a deep copy
q = list(l) # Creates a deep copy 

l[0] = 100 
print(p[0])
print(q[0])
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1
1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;a = [0 for i in range(5)]

mat = list()

for _ in range(5):
  mat.append(a) # Creates a shallow copy 

mat[1][1] = 10 

print(mat)

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;default-dictionary&#34;&gt;Default Dictionary&lt;/h2&gt;

&lt;p&gt;Python allows us to preset dictionary values even if a given key does not exist in the dictionary. This can be done with defaultdict from collections module.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import collections

data = {
    &#39;Tom&#39;:33,
    &#39;Jack&#39;:45,
    &#39;Jill&#39;:32,
    &#39;Mark&#39;:45,
    &#39;Sam&#39;:38
}

# Lengthy way

if &#39;John&#39; in data:
  print(data[&#39;John&#39;])
else:
  print(&#39;Absent&#39;)
  
# Recommended way

print(data.get(&#39;John&#39;,&#39;Absent&#39;))

# Recommended way

marks_data = collections.defaultdict(int)
print(marks_data[&#39;Tom&#39;])

pass_data = collections.defaultdict(str)
print(pass_data[&#39;Tom&#39;])

students_data = collections.defaultdict(lambda:&#39;Absent&#39;)
students_data.update(data)

print(students_data[&#39;Jim&#39;])
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;type-hinting&#34;&gt;Type Hinting&lt;/h2&gt;

&lt;p&gt;Type hinting is a Python programming convention that allows us to specify the return type &amp;amp; parameters of the function. This is a good coding practice that improves code readability.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def headline_without_type(text, align=True):
    if align:
        return f&amp;quot;{text.title()}\n{&#39;-&#39; * len(text)}&amp;quot;
    else:
        return f&amp;quot; {text.title()} &amp;quot;.center(50, &amp;quot;o&amp;quot;)


def headline_with_type(text: str, align: bool = True) -&amp;gt; str:
    if align:
        return f&amp;quot;{text.title()}\n{&#39;-&#39; * len(text)}&amp;quot;
    else:
        return f&amp;quot; {text.title()} &amp;quot;.center(50, &amp;quot;o&amp;quot;)

      
print(headline_without_type(&amp;quot;python type checking&amp;quot;))
print(headline_with_type(&amp;quot;python type checking&amp;quot;, False))

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;vs-is&#34;&gt;== vs is&lt;/h2&gt;

&lt;p&gt;There are two ways in Python to check the equivalence of two variables. However there is a big difference between their compiler level implementation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;list1 = [1,2,3]
list2 = list1
list3 = list(list1)

print(list1 == list2)
print(list1 == list3)

print(list1 is list2)
print(list1 is list3)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;True
True
True
False
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;extended-iterable-unpacking&#34;&gt;Extended Iterable Unpacking&lt;/h2&gt;

&lt;p&gt;Extended iterable unpacking allows us to use star operator to gather items from an iterable as a list.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a,b,c = [1,2,3]
print(a,b,c)

cities = [&#39;London&#39;,&#39;Paris&#39;,&#39;New York&#39;,&#39;Boston&#39;,&#39;Jerusalem&#39;,&#39;California&#39;]
start,*route,end = cities

print(start)
print(route)
print(end)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;1 2 3
London
[&#39;Paris&#39;, &#39;New York&#39;, &#39;Boston&#39;, &#39;Jerusalem&#39;]
California
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;antigravity&#34;&gt;Antigravity&lt;/h2&gt;

&lt;p&gt;Python is not that boring! It is full of strange and interesting things that never stop surprising us. This is really one of them!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import antigravity
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Cryptocurrencies and Blockchain</title>
      <link>https://anushkavirgaonkar.dev/talk/crypto-blockchain/</link>
      <pubDate>Fri, 25 Aug 2017 11:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/talk/crypto-blockchain/</guid>
      <description>&lt;p&gt;Get a copy of the talk slides &lt;a href=&#34;https://github.com/chaitanyarahalkar/temporary-uploads/raw/master/Cryptocurrencies%20and%20Blockchain.pdf&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Awesome Learning</title>
      <link>https://anushkavirgaonkar.dev/awesome-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://anushkavirgaonkar.dev/awesome-learning/</guid>
      <description>

&lt;p&gt;I love to explore the vast field of Computer Science. I&amp;rsquo;ve dabbled with a variety of stuff over the past few years. While doing so, I&amp;rsquo;ve had to invest considerable amount of time in digging up resources from the corners of the Web. Also, people often ask me for suggestions regarding tutorials and courses about something they wish to learn.&lt;/p&gt;

&lt;p&gt;Thus, I decided to compile this list with the hope that it would be useful to people and to also help me keep track of some great stuff I&amp;rsquo;ve found on the Web.&lt;/p&gt;

&lt;p&gt;Please keep in mind that I&amp;rsquo;ve not consumed all the material mentioned on this list. If I&amp;rsquo;ve mentioned 4 different resources for a topic, it means that I&amp;rsquo;ve skimmed over all of them, but may have decided to go with one of those, personally. However, I&amp;rsquo;ve added all of them since everyone has a different taste. The lists are mostly in my order of preference.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: Some of the links to books on Amazon are affiliate links. If you use them while purchasing, they grant me a small percentage of the cost of the book. Please note that the cost remains the same for you; Amazon simply gives me a small cut out of it. If you decide to buy a book, please use my link as it helps support the blog. Thanks!&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&#34;similar-lists&#34;&gt;Similar Lists&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/danistefanovic/build-your-own-x&#34; target=&#34;_blank&#34;&gt;Daniel Stefanovic on GitHub: Build Your Own X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/370-online-courses-with-real-college-credit-that-you-can-access-for-free-4fec5a28646/&#34; target=&#34;_blank&#34;&gt;freeCodeCamp: 400+ Online Courses With Real College Credit That You Can Access For Free&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#c&#34;&gt;C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c-1&#34;&gt;C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compilers&#34;&gt;Compilers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-science&#34;&gt;Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#game-development&#34;&gt;Game Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#go&#34;&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#git-and-github&#34;&gt;Git and GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interpreters--bytecode-virtual-machines&#34;&gt;Interpreters &amp;amp; Bytecode Virtual Machines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#java&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#javascript&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#machine-learning&#34;&gt;Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mongodb&#34;&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nodejs&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#oauth-20-authorization-framework&#34;&gt;OAuth 2.0 Authorization Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#opengl&#34;&gt;OpenGL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#operating-systems&#34;&gt;Operating Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#python&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#react&#34;&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#redis&#34;&gt;Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rest&#34;&gt;REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#web-development&#34;&gt;Web Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;c&#34;&gt;C&lt;/h1&gt;

&lt;h2 id=&#34;beginner&#34;&gt;Beginner&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8Ib7nwc33uA&amp;amp;list=PLGLfVvz_LVvSaXCpKS395wbCcmsmgRea7&#34; target=&#34;_blank&#34;&gt;Derek Banas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KJgsSFOSQv0&#34; target=&#34;_blank&#34;&gt;Giraffe Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CPjZKsUYSXg&amp;amp;list=PL_c9BZzLwBRKKqOc9TJz1pP0ASrxLMtp2&#34; target=&#34;_blank&#34;&gt;Caleb Curry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LtXEMwSG5-8&#34; target=&#34;_blank&#34;&gt;Socket Programming with C by Eduonix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.craftinginterpreters.com/a-bytecode-virtual-machine.html&#34; target=&#34;_blank&#34;&gt;Crafting Interpreters by Robert Nystrom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLSiFUSQSRYAOFwfP-aMzXJlWKVyIuWfPU&#34; target=&#34;_blank&#34;&gt;Stack-based Virtual Machine by Philip Bohun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLSiFUSQSRYAND5ETcWAkiD5tBxM-kZGLD&#34; target=&#34;_blank&#34;&gt;Corgi64: Register-based Virtual Machine by Philip Bohun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://amzn.to/2Ymyfnx&#34; target=&#34;_blank&#34;&gt;The C Programming Language by Brian Kernighan and Dennis Ritchie&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://devdocs.io/c/&#34; target=&#34;_blank&#34;&gt;C Documentation at DevDocs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;c-1&#34;&gt;C++&lt;/h1&gt;

&lt;h2 id=&#34;beginner-1&#34;&gt;Beginner&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=vLnPwxZdW4Y&#34; target=&#34;_blank&#34;&gt;C++ by Giraffe Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;advanced-modern&#34;&gt;Advanced/Modern&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL5jc9xFGsL8FWtnZBeTqZBbniyw0uHyaH&#34; target=&#34;_blank&#34;&gt;C++ 11 by Bo Qian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=DamuE8TM3xo&amp;amp;list=PLGLfVvz_LVvQ9S8YSV0iDsuEU8v11yP9M&#34; target=&#34;_blank&#34;&gt;Advanced C++ by Derek Banas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/TheChernoProject&#34; target=&#34;_blank&#34;&gt;Modern C++ by TheChernoProject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M&#34; target=&#34;_blank&#34;&gt;Concurrency in C++ by Bo Qian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_Sk9JT_gTV4&amp;amp;list=PL_dsdStdDXbrz9Ngrc1ErBwJIXLdClj1T&#34; target=&#34;_blank&#34;&gt;C++ 11 Smart Pointers by CodesBay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books-1&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://amzn.to/30WHah3&#34; target=&#34;_blank&#34;&gt;The C++ Programming Language by Bjarne Stroustrup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://amzn.to/30WTv4T&#34; target=&#34;_blank&#34;&gt;C++: The Complete Reference by Herbert Schildt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;documentation-1&#34;&gt;Documentation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.cppreference.com/w/&#34; target=&#34;_blank&#34;&gt;cppreference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/cpp/cpp/cpp-language-reference?view=vs-2019&#34; target=&#34;_blank&#34;&gt;C++ Language Reference by Microsoft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;compilers&#34;&gt;Compilers&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/compilers-theory-and-practice--ud168&#34; target=&#34;_blank&#34;&gt;Georgia Tech&amp;rsquo;s Compilers: Theory and Practice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lagunita.stanford.edu/courses/Engineering/Compilers/Fall2014/about&#34; target=&#34;_blank&#34;&gt;Stanford&amp;rsquo;s Compilers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLzLzYGEbdY5n9ITKUqOuRjXkRU5tMW2Sd&#34; target=&#34;_blank&#34;&gt;Bisqwit&amp;rsquo;s Create a Compiler Series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://compilerbook.com/&#34; target=&#34;_blank&#34;&gt;Write an Compiler in Go by Thorsten Ball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;data-science&#34;&gt;Data Science&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/specializations/ibm-data-science-professional-certificate&#34; target=&#34;_blank&#34;&gt;IBM Data Science Professional Certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.edx.org/professional-certificate/harvardx-data-science&#34; target=&#34;_blank&#34;&gt;HarvardX&amp;rsquo;s Data Science Professional Certificate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;docker&#34;&gt;Docker&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/a-beginner-friendly-introduction-to-containers-vms-and-docker-79a9e3e119b/&#34; target=&#34;_blank&#34;&gt;A Beginner-Friendly Introduction to Containers, VMs and Docker by Preethi Kasireddy on freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YFl2mCHdv24&#34; target=&#34;_blank&#34;&gt;Learn Docker in 12 Minutes by Jake Wright&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Kyx2PsuwomE&#34; target=&#34;_blank&#34;&gt;Exploring Docker by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Utf-A4rODH8&#34; target=&#34;_blank&#34;&gt;Building a container from scratch by Liz Rice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;game-development&#34;&gt;Game Development&lt;/h1&gt;

&lt;h2 id=&#34;c-2&#34;&gt;C++&lt;/h2&gt;

&lt;h4 id=&#34;opengl-directx&#34;&gt;OpenGL/DirectX&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCsyHonfwHi4fLb2lkq0DEAA&#34; target=&#34;_blank&#34;&gt;ChilliTomatoNoodle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw&#34; target=&#34;_blank&#34;&gt;TheChernoProject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/handmadeheroarchive&#34; target=&#34;_blank&#34;&gt;Handmade Hero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;sfml-sdl&#34;&gt;SFML/SDL&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/creaper/&#34; target=&#34;_blank&#34;&gt;Let&amp;rsquo;s Make Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL21OsoBLPpMOO6zyVlxZ4S4hwkY_SLRW9&#34; target=&#34;_blank&#34;&gt;Hilze Vonck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLRtjMdoYXLf776y4K432eL_qPw4na_py3&#34; target=&#34;_blank&#34;&gt;Sonar Systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;unity-3d&#34;&gt;Unity 3D&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLPV2KyIb3jR5QFsefuO2RlAgWEz6EvVi6&#34; target=&#34;_blank&#34;&gt;Brackeys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/the-complete-unity-indie-game-developer-course/&#34; target=&#34;_blank&#34;&gt;The Complete Unity Indie Game Developer Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/unity-master-video-game-development-the-complete-course/&#34; target=&#34;_blank&#34;&gt;Unity: Beginner to Advanced - Complete Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;java-lwjgl&#34;&gt;Java (LWJGL)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCUkRj4qoT1bsWpE_C8lZYoQ&#34; target=&#34;_blank&#34;&gt;ThinMatrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLlrATfBNZ98eOOCk2fOFg7Qg5yoQfFAdf&#34; target=&#34;_blank&#34;&gt;TheChernoProject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.edx.org/course/cs50s-introduction-to-game-development&#34; target=&#34;_blank&#34;&gt;CS50&amp;rsquo;s Introduction to Game Development by Harvard University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCeQhZOvNKSBRU0Mdg7V44wA&#34; target=&#34;_blank&#34;&gt;Matthew Hopson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC-yuWVUplUJZvieEligKBkA&#34; target=&#34;_blank&#34;&gt;OneLoneCoder/javidx9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.haroldserrano.com/&#34; target=&#34;_blank&#34;&gt;Harold Serrano&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;go&#34;&gt;Go&lt;/h1&gt;

&lt;h2 id=&#34;beginner-2&#34;&gt;Beginner&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tour.golang.org/welcome/1&#34; target=&#34;_blank&#34;&gt;A Tour of Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YS4e4q9oBaU&#34; target=&#34;_blank&#34;&gt;Introduction to Go by Michael Van Sickle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SqrbIlUwR0U&#34; target=&#34;_blank&#34;&gt;Go Crash Course by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=oppb7qE3Uao&amp;amp;list=PLmxT2pVYo5LDMV0epL4z4CUbxvIw6umg_&#34; target=&#34;_blank&#34;&gt;Write a Web App in Go by Davy Wybiral&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;advanced-1&#34;&gt;Advanced&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gophercises.com/&#34; target=&#34;_blank&#34;&gt;Gophercises by Jon Calhoun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://interpreterbook.com/&#34; target=&#34;_blank&#34;&gt;Write an Interpreter in Go by Thorsten Ball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://compilerbook.com/&#34; target=&#34;_blank&#34;&gt;Write an Compiler in Go by Thorsten Ball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLOXvU5Ov-cqpjd1_OnczdizY0I64OfH-T&#34; target=&#34;_blank&#34;&gt;Gaming in Go by Velovix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=9D4yH7e_ea8&amp;amp;list=PLDZujg-VgQlZUy1iCqBbe5faZLMkA3g2x&#34; target=&#34;_blank&#34;&gt;Games with Go by Jack Mott&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aYkxFbd6luY&#34; target=&#34;_blank&#34;&gt;Flappy Bird in Go by JustForFunc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books-2&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.golang-book.com/books/intro&#34; target=&#34;_blank&#34;&gt;An Introduction to Programming in Go by Caleb Doxsey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://amzn.to/2Gxpa50&#34; target=&#34;_blank&#34;&gt;The Go Programming Language by Alan A. A. Donovan and Brian Kernighan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;documentation-2&#34;&gt;Documentation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/pkg/&#34; target=&#34;_blank&#34;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;git-and-github&#34;&gt;Git and GitHub&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL-osiE80TeTuRUfjRe54Eea17-YfnOOAx&#34; target=&#34;_blank&#34;&gt;Git Tutorial by Corey Schafer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SWYqp7iY_Tc&#34; target=&#34;_blank&#34;&gt;Git and GitHub Crash Course by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.katacoda.com/courses/git&#34; target=&#34;_blank&#34;&gt;Interactive Git Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learngitbranching.js.org/&#34; target=&#34;_blank&#34;&gt;Interactive Tutorial on Git Branching&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;interpreters-bytecode-virtual-machines&#34;&gt;Interpreters &amp;amp; Bytecode Virtual Machines&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.craftinginterpreters.com/&#34; target=&#34;_blank&#34;&gt;Crafting Interpreters by Robert Nystrom&lt;/a&gt; &lt;em&gt;(cannot recommend this gem enough)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://interpreterbook.com/&#34; target=&#34;_blank&#34;&gt;Write an Interpreter in Go by Thorsten Ball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.subnetzero.io/post/building-language-vm-part-00/&#34; target=&#34;_blank&#34;&gt;So You Want to Build a Language VM by Fletcher Haynes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ruslanspivak.com/lsbasi-part1/&#34; target=&#34;_blank&#34;&gt;Simple Interpreter by Ruslan Spivak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLSiFUSQSRYAOFwfP-aMzXJlWKVyIuWfPU&#34; target=&#34;_blank&#34;&gt;Stack-based Virtual Machine by Philip Bohun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLSiFUSQSRYAND5ETcWAkiD5tBxM-kZGLD&#34; target=&#34;_blank&#34;&gt;Corgi64: Register-based Virtual Machine by Philip Bohun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;java&#34;&gt;Java&lt;/h1&gt;

&lt;h2 id=&#34;beginner-3&#34;&gt;Beginner&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eIrMbAQSU34&#34; target=&#34;_blank&#34;&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2dZiMBwX_5Q&amp;amp;list=PL_c9BZzLwBRKIMP_xNTJxi9lIgQhE51rF&#34; target=&#34;_blank&#34;&gt;Caleb Curry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLE7E8B7F4856C9B19&#34; target=&#34;_blank&#34;&gt;Derek Banas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;advanced-2&#34;&gt;Advanced&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=FLkOX4Eez6o&amp;amp;list=PL6gx4Cwl9DGBzfXLWLSYVy8EbTdpGbUIG&#34; target=&#34;_blank&#34;&gt;JavaFX by thenewboston&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCCXbhmjID-T2I0KfuDPbi6A&#34; target=&#34;_blank&#34;&gt;JavaFX by Genuine Coder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLqq-6Pq4lTTZh5U8RbdXq0WaYvZBz2rbn&#34; target=&#34;_blank&#34;&gt;Building REST APIs with JAX-RS by Java Brains&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books-3&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://amzn.to/2Y532Kl&#34; target=&#34;_blank&#34;&gt;Java: The Complete Reference by Herbert Schildt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;javascript&#34;&gt;JavaScript&lt;/h1&gt;

&lt;h2 id=&#34;beginner-tutorials-crash-courses&#34;&gt;Beginner Tutorials &amp;amp; Crash Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLqq-6Pq4lTTYFJxC9NLJ7dSTI5Z1WWB6K&#34; target=&#34;_blank&#34;&gt;Introduction to JavaScript for Developers by Java Brains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=hdI2bqOjy3c&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=W6NZfCO5SIk&#34; target=&#34;_blank&#34;&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PkZNo7MFNFg&#34; target=&#34;_blank&#34;&gt;freeCodeCamp on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrimba.com/g/gintrotojavascript&#34; target=&#34;_blank&#34;&gt;Introduction to JavaScript at Scrimba&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrimba.com/g/ges6&#34; target=&#34;_blank&#34;&gt;ES6 Tutorial at Scrimba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;advanced-and-full-courses&#34;&gt;Advanced and Full Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/&#34; target=&#34;_blank&#34;&gt;freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/modern-javascript-from-the-beginning/?couponCode=TRAVERSYMEDIA&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL4cUxeGkcC9i9Ae2D9Ee1RvylH38dKuET&#34; target=&#34;_blank&#34;&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=PFmuCDHHpwk&#34; target=&#34;_blank&#34;&gt;Object-Oriented JavaScript by Mosh Hamedani&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;machine-learning&#34;&gt;Machine Learning&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/learn/machine-learning&#34; target=&#34;_blank&#34;&gt;Stanford&amp;rsquo;s Machine Learning by Andrew Ng&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/specializations/machine-learning&#34; target=&#34;_blank&#34;&gt;University of Washington&amp;rsquo;s Machine Learning Specialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://courses.edx.org/courses/course-v1:MITx+6.86x+1T2019/course/&#34; target=&#34;_blank&#34;&gt;MITx&amp;rsquo;s Machine Learning with Python: From Linear Models to Deep Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLblh5JKOoLUICTaGLRoHQDuF_7q2GfuJF&#34; target=&#34;_blank&#34;&gt;StatQuest&amp;rsquo;s Machine Learning Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL4cUxeGkcC9jpvoYriLI0bY8DOgWZfi6u&#34; target=&#34;_blank&#34;&gt;MongoDB Tutorial by The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=-56x56UppqQ&#34; target=&#34;_blank&#34;&gt;MongoDB Crash Course by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;node-js&#34;&gt;Node.js&lt;/h1&gt;

&lt;h2 id=&#34;tutorials-crash-courses&#34;&gt;Tutorials &amp;amp; Crash Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL4cUxeGkcC9gcy9lrvMJ75z9maRw4byYp&#34; target=&#34;_blank&#34;&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=RLtyhwFtXQA&#34; target=&#34;_blank&#34;&gt;freeCodeCamp on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fBNz5xF-Kx4&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=C7TFgfY7JdE&#34; target=&#34;_blank&#34;&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=TlB_eWDSMt4&#34; target=&#34;_blank&#34;&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;full-courses&#34;&gt;Full Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithmosh.com/p/the-complete-node-js-course&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/course/nodejs-the-complete-guide/?couponCode=ACAD_Y&#34; target=&#34;_blank&#34;&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithmosh.com/p/the-complete-node-js-course&#34; target=&#34;_blank&#34;&gt;Programming with Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/&#34; target=&#34;_blank&#34;&gt;freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;project-tutorials&#34;&gt;Project Tutorials&lt;/h2&gt;

&lt;p&gt;Check out the following channels on YouTube which build a lot of stuff with Node.js:
- &lt;a href=&#34;https://www.youtube.com/user/TechGuyWeb&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;
- &lt;a href=&#34;https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg&#34; target=&#34;_blank&#34;&gt;The Net Ninja&lt;/a&gt;
- &lt;a href=&#34;https://www.youtube.com/channel/UCSJbGtTlrDami-tDGPUV9-w&#34; target=&#34;_blank&#34;&gt;Academind&lt;/a&gt;
- &lt;a href=&#34;https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ&#34; target=&#34;_blank&#34;&gt;freeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;oauth-2-0-authorization-framework&#34;&gt;OAuth 2.0 Authorization Framework&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=CPbvxxslDTU&#34; target=&#34;_blank&#34;&gt;OAuth 2.0: An Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=996OiexHze0&#34; target=&#34;_blank&#34;&gt;OAuth 2.0 by Nate Barbettini&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2&#34; target=&#34;_blank&#34;&gt;An Introduction to OAuth 2 by the DigitalOcean Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;opengl&#34;&gt;OpenGL&lt;/h1&gt;

&lt;h2 id=&#34;video-tutorials-with-c&#34;&gt;Video Tutorials with C++&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLlrATfBNZ98foTJPJ_Ev03o2oq3-GGOS2&#34; target=&#34;_blank&#34;&gt;TheChernoProject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0jML5fMBDGg&amp;amp;list=PLEETnX-uPtBXT9T-hD0Bj31DSnwio-ywh&#34; target=&#34;_blank&#34;&gt;thebennybox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLRtjMdoYXLf6zUMDJVRZYV-6g6n62vet8&#34; target=&#34;_blank&#34;&gt;Sonar Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL6xSOsbVA1eYSZTKBxnoXYboy7wc4yg-Z&#34; target=&#34;_blank&#34;&gt;Suraj Sharma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;video-tutorials-with-java&#34;&gt;Video Tutorials with Java&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLRIWtICgwaX0u7Rf9zkZhLoLuZVfUksDP&#34; target=&#34;_blank&#34;&gt;ThinMatrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ss3AnSxJ2X8&amp;amp;list=PLEETnX-uPtBXP_B2yupUKlflXBznWIlL5&#34; target=&#34;_blank&#34;&gt;thebennybox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books-4&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learnopengl.com/&#34; target=&#34;_blank&#34;&gt;Learn OpenGL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;documentation-3&#34;&gt;Documentation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.gl/&#34; target=&#34;_blank&#34;&gt;docs.gl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;operating-systems&#34;&gt;Operating Systems&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://littleosbook.github.io/&#34; target=&#34;_blank&#34;&gt;The Little Book About OS Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/introduction-to-operating-systems--ud923&#34; target=&#34;_blank&#34;&gt;Georgia Tech&amp;rsquo;s Introduction to Operating Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/advanced-operating-systems--ud189&#34; target=&#34;_blank&#34;&gt;Georgia Tech&amp;rsquo;s Advanced Operating Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cfenollosa/os-tutorial&#34; target=&#34;_blank&#34;&gt;Write an OS from scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLHh55M_Kq4OApWScZyPl5HhgsTJS9MZ6M&#34; target=&#34;_blank&#34;&gt;Write your own Operating System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLmlvkUN3-1MNKwINqdCDtTdNDjfBmWcZA&#34; target=&#34;_blank&#34;&gt;Writing an Operating System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;python&#34;&gt;Python&lt;/h1&gt;

&lt;h2 id=&#34;all-things-python&#34;&gt;All Things Python&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/sentdex&#34; target=&#34;_blank&#34;&gt;sentdex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/schafer5&#34; target=&#34;_blank&#34;&gt;Corey Schafer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tutorials&#34;&gt;Tutorials&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_uQrJ0TkZlc&#34; target=&#34;_blank&#34;&gt;Python for Beginners by Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=f79MRyMsjrQ&#34; target=&#34;_blank&#34;&gt;Python for Programmers by Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLGLfVvz_LVvTn3cK5e6LjhgGiSeVlIRwt&#34; target=&#34;_blank&#34;&gt;Derek Banas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rfscVS0vtbw&#34; target=&#34;_blank&#34;&gt;Giraffe Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;web-development&#34;&gt;Web Development&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL4cUxeGkcC9ib4HsrXEYpQnTOTZE1x0uc&#34; target=&#34;_blank&#34;&gt;Django Tutorial by The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tangowithdjango.com/&#34; target=&#34;_blank&#34;&gt;Tango with Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Fc2O3_2kax8&amp;amp;list=PLw02n0FEB3E3VSHjyYMcFadtQORvl1Ssj&#34; target=&#34;_blank&#34;&gt;Django Tutorial by Max Goodridge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zRwy8gtgJ1A&amp;amp;list=PLillGF-RfqbbbPz6GSEM9hLQObuQjNoj_&#34; target=&#34;_blank&#34;&gt;Flask Tutorial by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;react&#34;&gt;React&lt;/h1&gt;

&lt;h2 id=&#34;tutorials-and-crash-courses&#34;&gt;Tutorials and Crash Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL478wQWRhpfaQbaET2DvDzG60EFGThtd1&#34; target=&#34;_blank&#34;&gt;Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pgAvVxowaYU&#34; target=&#34;_blank&#34;&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sBws8MSXN7A&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Ke90Tje7VS0&amp;amp;&#34; target=&#34;_blank&#34;&gt;Programming With Mosh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;full-courses-1&#34;&gt;Full Courses&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/react-the-complete-guide-incl-redux/&#34; target=&#34;_blank&#34;&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL4cUxeGkcC9ij8CfkAY2RAGb-tmkNwQHG&#34; target=&#34;_blank&#34;&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codewithmosh.com/p/mastering-react&#34; target=&#34;_blank&#34;&gt;Programming With Mosh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/&#34; target=&#34;_blank&#34;&gt;freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrimba.com/g/glearnreact&#34; target=&#34;_blank&#34;&gt;Scrimba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;redis&#34;&gt;Redis&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Hbt56gFj998&#34; target=&#34;_blank&#34;&gt;Crash Course by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://try.redis.io/&#34; target=&#34;_blank&#34;&gt;Try Redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://redis.io/documentation&#34; target=&#34;_blank&#34;&gt;Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLrEMgOSrS_3fghr8ez63xKFNF-BA6Pz13&#34; target=&#34;_blank&#34;&gt;Writing System Software: A series about Redis internals by its creator, Salvatore Sanfilippo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/antirez/redis&#34; target=&#34;_blank&#34;&gt;Redis Source Code on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;rest&#34;&gt;REST&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLqq-6Pq4lTTZh5U8RbdXq0WaYvZBz2rbn&#34; target=&#34;_blank&#34;&gt;Building REST APIs with JAX-RS by Java Brains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q&#34; target=&#34;_blank&#34;&gt;Building a RESTful API with Node.js by Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qVTAB8Z2VmA&#34; target=&#34;_blank&#34;&gt;What is a REST API? by Telusko&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Q-BpqyOT3a8&#34; target=&#34;_blank&#34;&gt;REST and HTTP Explained by Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;web-development-1&#34;&gt;Web Development&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/&#34; target=&#34;_blank&#34;&gt;freeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/&#34; target=&#34;_blank&#34;&gt;W3Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/user/TechGuyWeb&#34; target=&#34;_blank&#34;&gt;Traversy Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg&#34; target=&#34;_blank&#34;&gt;The Net Ninja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCSJbGtTlrDami-tDGPUV9-w&#34; target=&#34;_blank&#34;&gt;Academind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrimba.com/&#34; target=&#34;_blank&#34;&gt;Scrimba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
